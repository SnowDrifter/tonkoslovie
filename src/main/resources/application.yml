app:
  host: http://localhost:8080
  siteHost: http://localhost:3000

spring:
  datasource:
    url: jdbc:postgresql://${DB_SERVER}:5432/${DB_DATABASE}
    username: ${DB_USER}
    password: ${DB_PASSWORD}
    type: com.zaxxer.hikari.HikariDataSource
    driver-class-name: org.postgresql.Driver
    hikari:
      minimum-idle: ${DB_MIN_POOL_SIZE:3}
      maximum-pool-size: ${DB_MAX_POOL_SIZE:10}
      connection-timeout: ${DB_CONNECTION_TIMEOUT:2000}
      validation-timeout: ${DB_VALIDATION_TIMEOUT:2000}
      auto-commit: false

  jpa:
    open-in-view: false
    show-sql: false
    hibernate:
      ddl-auto: validate
    properties:
      hibernate:
        dialect: ru.romanov.tonkoslovie.utils.JsonPostgresDialect
        temp:
          use_jdbc_metadata_defaults: false

  liquibase:
    change-log: classpath:db/changelog-master.yaml

  redis:
    host: ${REDIS_HOST:localhost}
    jedis:
      pool:
        max-idle: ${REDIS_MAX_IDLE:3}
        max-active: ${REDIS_MAX_TOTAL:10}

  data:
    redis:
      repositories:
        enabled: false

  mail:
    host: smtp.gmail.com
    port: 587
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          starttls.enable: true
          starttls.required: true

  servlet:
    multipart:
      enabled: true
      max-file-size: 128MB
      max-request-size: 128MB

  security:
    oauth2:
      client:
        registration:
          google:
            clientId: ${OAUTH_GOOGLE_CLIENT_ID}
            clientSecret: ${OAUTH_GOOGLE_SECRET}
            authorizationGrantType: authorization_code
            redirectUri: "{baseUrl}/api/oauth/login/callback/{registrationId}"
            scope:
              - openid
              - email
              - profile
          facebook:
            clientId: ${OAUTH_FB_CLIENT_ID}
            clientSecret: ${OAUTH_FB_SECRET}
            authorizationGrantType: authorization_code
            redirectUri: "{baseUrl}/api/oauth/login/callback/{registrationId}"
            scope:
              - email
              - public_profile
          vk:
            clientId: ${OAUTH_VK_CLIENT_ID}
            clientSecret: ${OAUTH_VK_SECRET}
            authorizationGrantType: authorization_code
            client-authentication-method: post
            redirectUri: "{baseUrl}/api/oauth/login/callback/{registrationId}"
            scope: email
        provider:
          google:
            tokenUri: https://www.googleapis.com/oauth2/v4/token
            authorizationUri: https://accounts.google.com/o/oauth2/v2/auth
            userInfoUri: https://www.googleapis.com/oauth2/v3/userinfo
          facebook:
            tokenUri: https://graph.facebook.com/v3.0/oauth/access_token
            authorizationUri: https://www.facebook.com/v3.0/dialog/oauth
            userInfoUri: https://graph.facebook.com/v3.0/me?fields=id,first_name,middle_name,last_name,name,email,verified,is_verified,picture.width(250).height(250)
          vk:
            userNameAttribute: user_id
            tokenUri: https://oauth.vk.com/access_token
            authorizationUri: https://oauth.vk.com/authorize
            userInfoUri: https://api.vk.com/method/users.get?fields=photo_max_orig&v=5.92

media:
  imageDirectory: /app/tonkoslovie/images
  soundDirectory: /app/tonkoslovie/sounds

jwt:
  secret: ${JWT_SECRET}

server:
  servlet:
    session:
      tracking-modes: cookie

management:
  endpoints:
    web:
      exposure:
        include: health
  server:
    port: 8085
  metrics:
    export:
      influx:
        enabled: false
        db: tonkoslovie
        uri: ${INFLUXDB_URI}
        user-name: ${INFLUXDB_USER}
        password: ${INFLUXDB_PASSWORD}
        step: 10s

logging:
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %green(%-5level) %highlight(%logger{36}) - %msg%n"
  level:
    root: info
    com.zaxxer.hikari: info