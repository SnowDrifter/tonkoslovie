app:
  host: http://localhost:8080
  siteHost: http://localhost:3000

spring:
  datasource:
    url: jdbc:postgresql://${DB_SERVER}:5432/${DB_DATABASE}
    username: ${DB_USER}
    password: ${DB_PASSWORD}
    type: com.zaxxer.hikari.HikariDataSource
    driver-class-name: org.postgresql.Driver
    hikari:
      minimum-idle: ${DB_MIN_POOL_SIZE:3}
      maximum-pool-size: ${DB_MAX_POOL_SIZE:10}
      connection-timeout: ${DB_CONNECTION_TIMEOUT:2000}
      validation-timeout: ${DB_VALIDATION_TIMEOUT:2000}
      auto-commit: false

  jpa:
    open-in-view: false
    show-sql: false
    hibernate:
      ddl-auto: validate
    properties:
      hibernate:
        dialect: ru.romanov.tonkoslovie.utils.JsonPostgresDialect
        temp:
          use_jdbc_metadata_defaults: false

  liquibase:
    change-log: classpath:db/changelog-master.yaml

  redis:
    host: ${REDIS_HOST:localhost}
    password: ${REDIS_PASSWORD}
    jedis:
      pool:
        max-idle: ${REDIS_MAX_IDLE:3}
        max-active: ${REDIS_MAX_TOTAL:10}

  data:
    redis:
      repositories:
        enabled: false

  mail:
    host: smtp.gmail.com
    port: 587
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          starttls.enable: true
          starttls.required: true

  servlet:
    multipart:
      enabled: true
      max-file-size: 128MB
      max-request-size: 128MB

metrics:
  influxdb:
    active: false
    host: 127.0.0.1
    port: 8086
    database: tonkoslovie
    auth: ${INFLUX_AUTH}
  console: false

media:
  imageDirectory: /app/tonkoslovie/images
  soundDirectory: /app/tonkoslovie/sounds

security:
  oauth2:
    successRedirectUrl: http://localhost:3000/

jwt:
  secret: ${JWT_SECRET}

google:
  client:
    clientId: ${OAUTH_GOOGLE_CLIENT_ID}
    clientSecret: ${OAUTH_GOOGLE_SECRET}
    accessTokenUri: https://www.googleapis.com/oauth2/v4/token
    userAuthorizationUri: https://accounts.google.com/o/oauth2/v2/auth
    clientAuthenticationScheme: form
    scope:
      - openid
      - email
      - profile
  resource:
    userInfoUri: https://www.googleapis.com/oauth2/v3/userinfo

facebook:
  client:
    clientId: ${OAUTH_FB_CLIENT_ID}
    clientSecret: ${OAUTH_FB_SECRET}
    accessTokenUri: https://graph.facebook.com/oauth/access_token
    userAuthorizationUri: https://www.facebook.com/dialog/oauth
    tokenName: oauth_token
    authenticationScheme: query
    clientAuthenticationScheme: form
  resource:
    userInfoUri: https://graph.facebook.com/me?fields=first_name,last_name,email

vk:
  client:
    clientId: ${OAUTH_VK_CLIENT_ID}
    clientSecret: ${OAUTH_VK_SECRET}
    accessTokenUri: https://oauth.vk.com/access_token
    userAuthorizationUri: https://oauth.vk.com/authorize
    tokenName: access_token
    authenticationScheme: query
    clientAuthenticationScheme: form
    scope: email
    grant-type: authorization_code
  resource:
    userInfoUri: https://api.vk.com/method/users.get?fields=bdate,sex,photo_max_orig,friend_status,relation,relation_partner&v=5.73

server:
  servlet:
    session:
      tracking-modes: cookie

management:
  endpoints:
    web:
      exposure:
        include: health
  server:
    port: 8085
  metrics:
    export:
      influx:
        enabled: ${INFLUX_ENABLED:false}
        db: tonkoslovie
        uri: ${INFLUX_URI}
        user-name: ${INFLUX_USER}
        password: ${INFLUXDB_USER_PASSWORD}
        step: 10s

logging:
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %green(%-5level) %highlight(%logger{36}) - %msg%n"
  level:
    root: info
    com.zaxxer.hikari: info