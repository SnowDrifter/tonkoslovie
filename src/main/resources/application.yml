app:
  host: http://localhost:8080
  siteHost: http://localhost:3000

spring:
  jpa:
    open-in-view: true
    show-sql: false
    hibernate:
      ddl-auto: update
      use-new-id-generator-mappings: true
    properties:
      hibernate:
        dialect: ru.romanov.tonkoslovie.utils.JsonPostgresDialect
        temp:
          use_jdbc_metadata_defaults: false
  redis:
    host: ${REDIS_HOST:localhost}
    password: ${REDIS_PASSWORD}
    jedis:
      pool:
        max-idle: ${REDIS_MAX_IDLE:3}
        max-active: ${REDIS_MAX_TOTAL:10}

  data:
    redis:
      repositories:
        enabled: false

  mail:
    host: smtp.gmail.com
    port: 587
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          starttls.enable: true
          starttls.required: true

  servlet:
    multipart:
      enabled: true
      max-file-size: 128MB
      max-request-size: 128MB

management:
  endpoints:
    web:
      exposure:
        include: "*"
#        exclude:
  metrics:
    tags:
      application: durak-app

hikari:
  datasource:
    driverClassName: org.h2.Driver
    jdbcUrl: ${DB_URL}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    minimumIdle: 1
    maximumPoolSize: 5
    idleTimeout: 10000
    autoCommit: false

metrics:
  influxdb:
    active: false
    host: 127.0.0.1
    port: 8086
    database: tonkoslovie
    auth: ${INFLUX_AUTH}
  console: false

media:
  imageDirectory: /app/tonkoslovie/images
  soundDirectory: /app/tonkoslovie/sounds

security:
  oauth2:
    successRedirectUrl: http://localhost:3000/

jwt:
  secret: ${JWT_SECRET}

google:
  client:
    clientId: ${OAUTH_GOOGLE_CLIENT_ID}
    clientSecret: ${OAUTH_GOOGLE_SECRET}
    accessTokenUri: https://www.googleapis.com/oauth2/v4/token
    userAuthorizationUri: https://accounts.google.com/o/oauth2/v2/auth
    clientAuthenticationScheme: form
    scope:
      - openid
      - email
      - profile
  resource:
    userInfoUri: https://www.googleapis.com/oauth2/v3/userinfo

facebook:
  client:
    clientId: ${OAUTH_FB_CLIENT_ID}
    clientSecret: ${OAUTH_FB_SECRET}
    accessTokenUri: https://graph.facebook.com/oauth/access_token
    userAuthorizationUri: https://www.facebook.com/dialog/oauth
    tokenName: oauth_token
    authenticationScheme: query
    clientAuthenticationScheme: form
  resource:
    userInfoUri: https://graph.facebook.com/me?fields=first_name,last_name,email

vk:
  client:
    clientId: ${OAUTH_VK_CLIENT_ID}
    clientSecret: ${OAUTH_VK_SECRET}
    accessTokenUri: https://oauth.vk.com/access_token
    userAuthorizationUri: https://oauth.vk.com/authorize
    tokenName: access_token
    authenticationScheme: query
    clientAuthenticationScheme: form
    scope: email
    grant-type: authorization_code
  resource:
    userInfoUri: https://api.vk.com/method/users.get?fields=bdate,sex,photo_max_orig,friend_status,relation,relation_partner&v=5.73

server:
  servlet:
    session:
      tracking-modes: cookie

logging:
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %green(%-5level) %highlight(%logger{36}) - %msg%n"
  level:
    root: info
    com.zaxxer.hikari: info